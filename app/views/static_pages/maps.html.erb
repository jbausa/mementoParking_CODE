<% provide(:title, "Mis ubicaciones") %>
<script type="text/javascript" src='https://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js'> </script>
<script type="text/javascript">
	 	// Variables and Setters

 	var map;
 	var markerUserClick = null;
 	var markerDB = [];
 	var marker = null;
 	var markerCar = null;
 	var latlng = null;
 	var coords = null;
 	var address = null;
 	var geocoder = new google.maps.Geocoder;
 	var carId = null;
 	var mailOwner = null;
 	var infowindow = new google.maps.InfoWindow({size: new google.maps.Size(150,50)});
 	var directionsService = new google.maps.DirectionsService;
 	var directionsDisplay = new google.maps.DirectionsRenderer;

 	function setMailOwner(newMailOwner){
 		mailOwner = newMailOwner;
 	}

 	function setCarId(id){
 		carId = id;
 	}
 	
 	function setMarkerDB(marker){
 		markerDB.push(marker);
 	}

 	function setCoords(newCoords){
 		coords = newCoords;
 	}

 	function clearMarkerCar(){
 		markerCar.setMap(null);
 	}


 	/* Initialize map with home marker */
 	function set_map_Location(position){
 		/* Create map */
 		var mapOptions = {
 			center: new google.maps.LatLng(position.coords.latitude,position.coords.longitude),
 			zoom: 17,
 			mapTypeId: google.maps.MapTypeId.ROADMAP
 		};
 		map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

 		/* Add markerHome with infowindow and custom icon */
 		var markerHome = new google.maps.Marker(
 			{position: new google.maps.LatLng(position.coords.latitude, position.coords.longitude), 
 				map: map,
 				icon: 'https://mts.googleapis.com/vt/icon/name=icons/spotlight/spotlight-waypoint-a.png&text=A&psize=16&font=fonts/Roboto-Regular.ttf&color=ff333333&ax=44&ay=48&scale=1'
 			});
 		latlng = {lat: parseFloat(position.coords.latitude), lng: parseFloat(position.coords.longitude)};
 		
 		/* Locate user position */
 		var location = {'location': latlng};
 		geocoder.geocode(location, function(results, status) {
 			if (status === google.maps.GeocoderStatus.OK) {
 				if (results[0]) {
 					map.setZoom(15);
 					infowindow.setContent(results[0].formatted_address);
 				} else {
 					window.alert('No results found');
 				}
 			} else {
 				window.alert('Geocoder failed due to: ' + status);
 			}
 		});

 		/* Listeners for map, markerHome and click in map */
 		google.maps.event.addListener(markerHome, 'click', function(){infowindow.open(map,markerHome);});
 		google.maps.event.addListener(map, 'click', function(event) {
 			if (markerUserClick) {
 				markerUserClick.setMap(null);
 				markerUserClick = null;
 			}
 			setCoords(event.latLng);
 			createMarkerLatLng(event.latLng);
 		});
 	}

 	/* Get user's location (HTML5) */
 	function getLocation() {
 		if (navigator.geolocation) {
 			coords = null;
 			navigator.geolocation.getCurrentPosition(set_map_Location);
 		}
 	}

	// Change label on map click with street location
	function changeLabel(address){
		lblPosition = document.getElementById('lblPosition');
		lblPosition.innerHTML = address;
		$('#lblPosition').show();
	}

	 // A function to create the marker and set up the event window function 
	 function createMarkerLatLng(latlng) {
	 	markerUserClick = new google.maps.Marker(
	 		{position: latlng, 
	 			icon: "https://mt.google.com/vt/icon?psize=20&font=fonts/Roboto-Regular.ttf&color=ff330000&name=icons/spotlight/spotlight-waypoint-blue.png",
	 			map: map, 
	 			zIndex: Math.round(latlng.lat()*-100000)<<5}
	 			);
	 	geocoder.geocode({'location': latlng}, function(results, status) {
	 		if (status === google.maps.GeocoderStatus.OK) {
	 			if (results[0]) {
	 				map.setZoom(15);
	 				address = results[0].formatted_address;
	 				infowindow.setContent("<b>Nueva ubicación:</b><br>" + results[0].formatted_address);
	 				infowindow.open(map, markerUserClick);
	 			} else {
	 				window.alert('No results found');
	 			}
	 		} else {
	 			window.alert('Geocoder failed due to: ' + status);
	 		}
	 	});
	 	google.maps.event.trigger(markerUserClick, 'click');
	 }

	 /* Save location to DB */
	 function saveLocation(){
	 	if(coords==null){
	 		$('#alertCoord').show();
	 	}
	 	if(carId==null){
	 		$('#alertCar').show();
	 	}
	 	if(coords!=null && carId!=null) {
	 		window.open("coords?&coord="+coords+"&address="+address+"&carId="+carId+"&mailOwner="+mailOwner,"_self");
	 	}
	 }

	 /* Add markers stored in DB */
	 function addMarkerDB(address, description) {

	 	if (markerUserClick) {
	 		markerUserClick.setMap(null);
	 		markerUserClick = null;
	 	}

	 	if(address){
	 		geocoder.geocode({'address': address}, function(results, status) {
	 			if (status === google.maps.GeocoderStatus.OK) {
	 				var markerDB = new google.maps.Marker({
	 					map: map,
	 					draggable: true,
	 					position: results[0].geometry.location
	 				});
	 				var infoWindowDB = new google.maps.InfoWindow({size: new google.maps.Size(150,50)});
	 				infoWindowDB.setContent("<b>"+description+":</b><br>"+ results[0].formatted_address);
	 				setMarkerDB(markerDB);
	 				google.maps.event.addListener(markerDB, 'click', function(){infoWindowDB.open(map,markerDB);});
	 			} else {
	 				alert('Geocode was not successful for the following reason: ' + status);
	 			}
	 		});
	 	}
	 	setMapOnAll();
	 }

	 /* Add marker for selected car */
	 function addMarkerCar(address, idCar, mailOwner){
	 	setMailOwner(mailOwner);
	 	setCarId(idCar);
	 	clearMarkers();
	 	if (markerCar) {
	 		markerCar.setMap(null);
	 		markerCar = null;
	 	}

	 	if(address){
	 		geocoder.geocode({'address': address}, function(results, status) {
	 			if (status === google.maps.GeocoderStatus.OK) {
	 				markerCar = new google.maps.Marker({
	 					map: map,
	 					draggable: true,
	 					position: results[0].geometry.location
	 				});
	 				var infoWindowCar = new google.maps.InfoWindow({size: new google.maps.Size(150,50)});
	 				infoWindowCar.setContent(results[0].formatted_address);
	 				google.maps.event.addListener(markerCar, 'click', function(){infoWindowCar.open(map,markerCar);});
	 				map.panTo(markerCar.getPosition());
	 				location.href = "#";
	 				location.href = "#map-canvas";
	 			} else {
	 				alert('Geocode was not successful for the following reason: ' + status);
	 			}
	 		});

	 		/* Show route from home to selected car */
	 		directionsDisplay.setMap(map);
	 		directionsDisplay.setOptions( { suppressMarkers: true } );
	 		directionsService.route({
	 			origin: latlng,
	 			destination: address,
	 			travelMode: google.maps.TravelMode.WALKING
	 		}, function(response, status) {
	 			if (status === google.maps.DirectionsStatus.OK) {
	 				directionsDisplay.setDirections(response);
	 			} else {
	 				window.alert('Directions request failed due to ' + status);
	 			}
	 		});
	 	}
	 	else{
	 		directionsDisplay.setMap(null);
	 	}
	 }

	 /* Show all marker stored in DB */
	 function setMapOnAll() {
	 	for (var i = 0; i < markerDB.length; i++) {
	 		markerDB[i].setMap(map);
	 	}
	 	clearSelectors();
	 }

	 /* Clear all markers from map */
	 function clearMarkers(){
	 	for (var i = 0; i < markerDB.length; i++) {
	 		markerDB[i].setMap(null);
	 	}
	 	if (markerCar){
	 		markerCar.setMap(null);
	 		markerCar = null;
	 	}
	 	if (markerUserClick) {
	 		markerUserClick.setMap(null);
	 		markerUserClick = null;
	 	}
	 	directionsDisplay.setMap(null);
	 	clearSelectors();
	 	setCarId == null;
	 }	

	 /* Clear and unselected all labels for select cars */
	 function clearSelectors(){
	 	var elems = document.querySelectorAll(".radio-inline, .radio");	
	 	[].forEach.call(elems, function(el) {
	 		el.classList.remove("checked");
	 	});
	 }

	 $(document).ready(function() {
	 	/* Original code from 
			http://www.avtex.com/blog/2015/02/10/bootstrap-radio-buttons-and-checkboxes-in-columns-with-contextual-text-fields/#sthash.lnw1shBp.dpuf
	 	*/
		$('.form-group').on('click','input[type=radio]',function() {
			$(this).closest('.form-group').find('.radio-inline, .radio').removeClass('checked');
			$(this).closest('.radio-inline, .radio').addClass('checked');
		});
		$('.form-group').on('click','label[type=radio]',function() {
			$(this).closest('.form-group').find('.radio-inline, .radio').removeClass('checked');
			$(this).closest('.radio-inline, .radio').addClass('checked');
		});
		$('input[type=radio]').click(function() {
			$(this).closest('.form-group').find('.additional-info-wrap .additional-info').addClass('hide').find('input,select').val('').attr('disabled','disabled');
			if($(this).closest('.additional-info-wrap').length > 0) {
				$(this).closest('.additional-info-wrap').find('.additional-info').removeClass('hide').find('input,select').removeAttr('disabled');
			}		
		});
	});
</script>

<div class="jumbotron fixed-top">
	<div class="panel panel-default">
		<div class="panel-heading">
			<h3 class="panel-title"><span class="fa fa-map-marker" aria-hidden="true" style="margin-right: 10px"></span>Mi mapa</h3>
		</div>
		<div class="panel-body">
			<div class="well">
				<div id="map-canvas"></div>
			</div>
			<script type="text/javascript">getLocation()</script>

		</div>
	</div>

	<div class="panel panel-default">
		<div class="panel-heading">
			<h3 class="panel-title"><span class="fa fa-car" aria-hidden="true" style="margin-right: 10px"></span>Mis ubicaciones</h3>
		</div>	
		<div class="panel-body">
			<!-- INFO, WARNING, ALERT AND ERROR PANELS -->
			<div class="alert alert-info" id="lblPosition" style="font-size: 12px !important; display:none;"></div>
			<div class="alert alert-danger alert-dismissible" role="alert" id="alertCoord" style="display:none;">
				<button type="button" class="close" onclick="$(this).parent().hide()" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<strong>¡Error!</strong> Selecciona una ubicación antes de guardar.
			</div>
			<div class="alert alert-danger alert-dismissible" role="alert" id="alertCar" style="display:none;"	>
				<button type="button" class="close" onclick="$(this).parent().hide()" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<strong>¡Error!</strong> Selecciona un coche antes de guardar.
			</div>
			<!-- END OF PANELS -->

			<!-- START LIST UBICATIONS -->
			<div class="row vdivide well well-fixed">
				<div class="col-md-9">
					<ul class="list-unstyled form-group">
						<% @car = User.find_by(email: current_user.email).car %>
						<% if @car.count == 0 %>
						<li class="label label-danger">No tienes ubicaciones guardadas</li>
						<% end %>
						<% else %>
						<% @car.each_with_index do |car, index| %>
						<% if index != 0 %> <li class="separator"/>	<% end %>
						<li>
							<h3><label class="label label-primary" style="display: inline-block; width: 100%"><i class="fa fa-car label-car" style="white-space: normal">&nbsp;&nbsp;<%= car.description.upcase %></i></label></h3>
							<label type="radio" for="<%= car.description %>" class="radio-inline" onclick="addMarkerCar('<%= car.address %>', this.id, '<%= current_user.email %>')" id="<%= car.id %>"> 

								<% if(car.address) %> 
								<%= car.address %>
								<% else %>
								<%= "Selecciona una nueva ubicación" %> 
								<% end %>
							</label>
							<script type="text/javascript">addMarkerDB('<%= car.address %>', '<%= car.description %>')</script>
						</li>
						<% end %>

						<h3><label class="label label-warning" style="display: inline-block; width: 100%"><i class="fa fa-share-alt" id="description" style="white-space: normal">&nbsp;&nbsp;Compartidos conmigo:</i></label></h3>

						<% @userSharing = User.where(:'car.shared' => current_user.email).all %>
						<% index=0%>
						<% @userSharing.each do |userSharing| %>

						<% @car = User.find(userSharing.id).car %>
						<% @car.each do |carSharing| %>
						<% if carSharing.shared %>
						<% if carSharing.shared.include?(current_user.email) && userSharing.email != current_user.email%>
						<% if index != 0 %> <li class="separator"/>	<% end %>
						<li>
							<h3><label class="label label-primary" style="display: inline-block; width: 100%"><i style="white-space: normal" class="fa fa-car label-car">&nbsp;&nbsp;<%= carSharing.description.upcase %> (Compartido por: <% if userSharing.name %> 
												<%= userSharing.name %>
											<% else %>
												<%= userSharing.email %>
											<% end %>
											)</i></label></h3>
							<label type="radio" for="<%= carSharing.description %>" class="radio-inline" onclick="addMarkerCar('<%= carSharing.address %>', this.id, '<%= userSharing.email %>')" id="<%= carSharing.id %>"> 
								<% if(carSharing.address) %> 
								<%= carSharing.address %>
								<% else %>
								<%= "Selecciona una nueva ubicación" %> 
								<% end %>
							</label>
							<script type="text/javascript">addMarkerDB('<%= carSharing.address %>', '<%= carSharing.description %>')</script>
						</li>
						<% index = index+1 %>
						<% end %>
						<% end %>
						<% end %>
						<!-- Crear un bucle para recorrer todos los coches compartidos conmigo por el Usuario -->



						<% end %>
					</ul>
				</div>
				<!-- END LIST UBICATIONS -->
				<div class="col-md-3 text-center">
					<div class="btn btn-primary btn-fixed" onclick="getLocation()"><span class="glyphicon glyphicon-screenshot fa-fixed"></span>Centrar</div>
					<div class="btn btn-primary btn-fixed" onclick="saveLocation()"><span class="fa fa-map-marker fa-fixed"></span>Guardar marcador</div>  
					<div class="btn btn-primary btn-fixed" onclick="clearMarkers()"><span class="fa fa-map-o fa-fixed"></span>Limpiar mapa</div>
					<div class="btn btn-primary btn-fixed" onclick="setMapOnAll()"><span class="fa fa-eye fa-fixed"></span>Mostrar ubicaciones</div>
				</div>
			</div>	
		</div>
	</div>	
</div>
</div>

<script type="text/javascript">


</script>