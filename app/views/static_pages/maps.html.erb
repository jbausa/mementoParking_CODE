 <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAVdlyqpDfn1sXmYcY9WJS4cfU0jnkIWao"></script>
 <script type="text/javascript">
 	// VARIABLES
 	var map;
 	var markerUserClick = null;
 	var markerDB = [];
 	var marker = null;
 	var markerCar = null;
 	var latlng = null;
 	var infowindow = new google.maps.InfoWindow({size: new google.maps.Size(150,50)});
 	var coords = null;
 	var address = null;
 	var geocoder = new google.maps.Geocoder;
 	var carId = null;

 	function setCarId(id){
 		carId = id;
 	}
 	
 	function setMarkerDB(marker){
 		markerDB.push(marker);
 	}

 	function setCoords(newCoords){
 		coords = newCoords;
 	}

 	function clearMarkerCar(){
 		markerCar.setMap(null);
 	}

 	function set_map_Location(position){
 		/* Create map */
 		var mapOptions = {
 			center: new google.maps.LatLng(position.coords.latitude,position.coords.longitude),
 			zoom: 17,
 			mapTypeId: google.maps.MapTypeId.ROADMAP
 		};
 		map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

 		/* Add markerHome with infowindow */
 		var markerHome = new google.maps.Marker(
 			{position: new google.maps.LatLng(position.coords.latitude, position.coords.longitude), 
 				map: map,
 				icon: 'https://maps.google.com/mapfiles/kml/shapes/schools_maps.png'
 			});
 		latlng = {lat: parseFloat(position.coords.latitude), lng: parseFloat(position.coords.longitude)};
 		
 		/* Locate user position */
 		var prueba = {'location': latlng};
 		geocoder.geocode(prueba, function(results, status) {
 			if (status === google.maps.GeocoderStatus.OK) {
 				if (results[0]) {
 					map.setZoom(15);
 					infowindow.setContent(results[0].formatted_address);
				} else {
					window.alert('No results found');
				}
			} else {
				window.alert('Geocoder failed due to: ' + status);
			}
		});

 		/* Listeners for map, markerHome and click */
 		google.maps.event.addListener(markerHome, 'click', function(){infowindow.open(map,markerHome);});
 		google.maps.event.addListener(map, 'click', function(event) {
 			if (markerUserClick) {
 				markerUserClick.setMap(null);
 				markerUserClick = null;
 			}
 			setCoords(event.latLng);
 			createMarkerLatLng(event.latLng);
 		});
 	}

 	function getLocation() {
 		if (navigator.geolocation) {
 			coords = null;
 			navigator.geolocation.getCurrentPosition(set_map_Location);
 		} else {
 			x.innerHTML = "Geolocation is not supported by this browser.";
 		}
 	}

	// Change label on map click with street location
	function changeLabel(address){
		lblPosition = document.getElementById('lblPosition');
		lblPosition.innerHTML = address;
		$('#lblPosition').show();
	}

	 // A function to create the marker and set up the event window function 
	function createMarkerLatLng(latlng) {
		markerUserClick = new google.maps.Marker({position: latlng, label: "A", map: map, zIndex: Math.round(latlng.lat()*-100000)<<5});
		geocoder.geocode({'location': latlng}, function(results, status) {
			if (status === google.maps.GeocoderStatus.OK) {
				if (results[0]) {
					map.setZoom(15);
					address = results[0].formatted_address;
					infowindow.setContent("<b>Nueva ubicación:</b><br>" + results[0].formatted_address);
					infowindow.open(map, markerUserClick);
				} else {
					window.alert('No results found');
				}
			} else {
				window.alert('Geocoder failed due to: ' + status);
			}
		});
		google.maps.event.trigger(markerUserClick, 'click');
	}

	function saveLocation(){
		if(coords==null){
			$('#alertCoord').show();
		}
		if(carId==null){
			$('#alertCar').show();
		}
		if(coords!=null && carId!=null) {
			window.open("coords?&coord="+coords+"&address="+address+"&carId="+carId+"&currentUser="+"CURRENTUSER","_self");
		}
	}

	function addMarkerDB(address) {
		if (markerUserClick) {
			markerUserClick.setMap(null);
			markerUserClick = null;
		}

		geocoder.geocode({'address': address}, function(results, status) {
			if (status === google.maps.GeocoderStatus.OK) {
				var markerDB = new google.maps.Marker({
					map: map,
					draggable: true,
					position: results[0].geometry.location
				});
				var infoWindowDB = new google.maps.InfoWindow({size: new google.maps.Size(150,50)});
				infoWindowDB.setContent(results[0].formatted_address);
				setMarkerDB(markerDB);
				google.maps.event.addListener(markerDB, 'click', function(){infoWindowDB.open(map,markerDB);});
			} else {
				alert('Geocode was not successful for the following reason: ' + status);
			}
		});
	}

	function addMarkerCar(address, idCar){
		setCarId(idCar);
		clearMarkers();
		if (markerCar) {
 				markerCar.setMap(null);
 				markerCar = null;
 			}
		geocoder.geocode({'address': address}, function(results, status) {
			if (status === google.maps.GeocoderStatus.OK) {
				markerCar = new google.maps.Marker({
					map: map,
					draggable: true,
					position: results[0].geometry.location
				});
				var infoWindowCar = new google.maps.InfoWindow({size: new google.maps.Size(150,50)});
				infoWindowCar.setContent(results[0].formatted_address);
				google.maps.event.addListener(markerCar, 'click', function(){infoWindowCar.open(map,markerCar);});


				map.panTo(markerCar.getPosition());
				location.href = "#";
				location.href = "#map-canvas";
			} else {
				alert('Geocode was not successful for the following reason: ' + status);
			}
		});
	}

	function setMapOnAll() {
	  for (var i = 0; i < markerDB.length; i++) {
	    markerDB[i].setMap(map);
	  }
	  clearSelectors();
	}

	function clearMarkers(){
		for (var i = 0; i < markerDB.length; i++) {
		    markerDB[i].setMap(null);
		}
		if (markerCar){
			markerCar.setMap(null);
			markerCar = null;
		}
		if (markerUserClick) {
			markerUserClick.setMap(null);
			markerUserClick = null;
		}
		clearSelectors();
		setCarId == null;
	}	

	function clearSelectors(){
		var elems = document.querySelectorAll(".radio-inline, .radio");	
		[].forEach.call(elems, function(el) {
		    el.classList.remove("checked");
		});
	}
</script>

<div class="jumbotron fixed-top">
		<div class="panel panel-default">
			<div class="panel-heading">
				<h3 class="panel-title"><span class="fa fa-map-marker" aria-hidden="true" style="margin-right: 10px"></span>Mi mapa</h3>
			</div>
			<div class="panel-body">
				<div class="well">
					<div id="map-canvas"></div>
				</div>
				<script type="text/javascript">getLocation()</script>
				
			</div>
		</div>
	
		<div class="panel panel-default">
			<div class="panel-heading">
				<h3 class="panel-title"><span class="fa fa-car" aria-hidden="true" style="margin-right: 10px"></span>Mis ubicaciones</h3>
			</div>	
			<div class="panel-body">
				<!-- INFO, WARNING, ALERT AND ERROR PANELS -->
				<div class="alert alert-info" id="lblPosition" style="font-size: 12px !important; display:none;"></div>
				<div class="alert alert-danger alert-dismissible" role="alert" id="alertCoord" style="display:none;"	>
					<button type="button" class="close" onclick="$(this).parent().hide()" aria-label="Close"><span aria-hidden="true">&times;</span></button>
					<strong>¡Error!</strong> Selecciona una ubicación antes de guardar.
				</div>
				<div class="alert alert-danger alert-dismissible" role="alert" id="alertCar" style="display:none;"	>
					<button type="button" class="close" onclick="$(this).parent().hide()" aria-label="Close"><span aria-hidden="true">&times;</span></button>
					<strong>¡Error!</strong> Selecciona un coche antes de guardar.
				</div>
				<!-- END OF PANELS -->

				<!-- START LIST UBICATIONS -->
				<div class="row vdivide well well-fixed">
					<div class="col-md-9">
						<ul class="list-unstyled  form-group">
							<% @car = User.find_by(email: current_user.email).car %>
							<% if @car.count == 0 %>
							<li class="label label-danger">No tienes ubicaciones guardadas</li>
							<% end %>
							<% else %>
							<% @car.each_with_index do |car, index| %>
							<% if index != 0 %> <li class="separator"/>	<% end %>
							<li>
								<h3><span class="label label-primary"><i class="fa fa-car label-car">&nbsp;&nbsp;<%= car.description.upcase %></i></span></h3>
								<label type="radio" for="<%= car.description %>" class="radio-inline" onclick="addMarkerCar('<%= car.address %>', this.id)" id="<%= car.id %>"> <%= car.address %> </label>

								<script type="text/javascript">addMarkerDB('<%= car.address %>')</script>
							</li>							
							<script type="text/javascript">setMapOnAll()</script>
							<% end %>
						</ul>
					</div>

				<!-- END LIST UBICATIONS -->
					<div class="col-md-3 text-center">
						<div class="btn btn-primary btn-fixed" onclick="getLocation()"><span class="glyphicon glyphicon-screenshot fa-fixed"></span>Centrar</div>
						<div class="btn btn-primary btn-fixed" onclick="saveLocation()"><span class="fa fa-map-marker fa-fixed"></span>Guardar marcador</div>  
						<div class="btn btn-primary btn-fixed" onclick="clearMarkers()"><span class="fa fa-map-o fa-fixed"></span>Limpiar mapa</div>
						<div class="btn btn-primary btn-fixed" onclick="setMapOnAll()"><span class="fa fa-eye fa-fixed"></span>Mostrar ubicaciones</div>
					</div>
				</div>				
			</div>
		</div>	
	</div>
</div>

<script type="text/javascript">

$(document).ready(function() {


	//When checkboxes/radios checked/unchecked, toggle background color
	$('.form-group').on('click','input[type=radio]',function() {
		$(this).closest('.form-group').find('.radio-inline, .radio').removeClass('checked');
		$(this).closest('.radio-inline, .radio').addClass('checked');
	});
	$('.form-group').on('click','label[type=radio]',function() {
		$(this).closest('.form-group').find('.radio-inline, .radio').removeClass('checked');
		$(this).closest('.radio-inline, .radio').addClass('checked');
	});

	//Show additional info text box when relevant checkbox checked
	$('.additional-info-wrap input[type=checkbox]').click(function() {
		if($(this).is(':checked')) {
			$(this).closest('.additional-info-wrap').find('.additional-info').removeClass('hide').find('input,select').removeAttr('disabled');
		}
		else {
			$(this).closest('.additional-info-wrap').find('.additional-info').addClass('hide').find('input,select').val('').attr('disabled','disabled');
		}
		
	});
	//Show additional info text box when relevant radio checked
	$('input[type=radio]').click(function() {
		$(this).closest('.form-group').find('.additional-info-wrap .additional-info').addClass('hide').find('input,select').val('').attr('disabled','disabled');
		if($(this).closest('.additional-info-wrap').length > 0) {
			$(this).closest('.additional-info-wrap').find('.additional-info').removeClass('hide').find('input,select').removeAttr('disabled');
		}		
	});

}); 

//See more at: http://www.avtex.com/blog/2015/02/10/bootstrap-radio-buttons-and-checkboxes-in-columns-with-contextual-text-fields/#sthash.lnw1shBp.dpuf
</script>